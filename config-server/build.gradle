buildscript {
    ext {
        kotlinVersion = "${kotlin_version}"
        springBootVersion = "${spring_boot_version}"
        javaVersion = "${java_version}"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'com.navid'
version = "${version}"
sourceCompatibility = "${javaVersion}"
defaultTasks 'bootRun'

compileKotlin {
    kotlinOptions.jvmTarget = "${javaVersion}"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "${javaVersion}"
}

repositories {
    mavenCentral()
}


ext {
    springCloudVersion = "${spring_cloud_version}"
}

dependencies {
    compile('org.springframework.cloud:spring-cloud-config-server')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
